name: 'Destroy Infrastructure'

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "destroy" to confirm infrastructure destruction'
        required: true
        default: ''

jobs:
  destroy:
    name: 'Destroy Terraform Infrastructure'
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirm == 'destroy' }}
    environment:
      name: 'destroy-infra'
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Passo adicional para configurar kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      # Atualizar o kubeconfig para o cluster EKS
      - name: Set up EKS kubeconfig
        run: |
          aws eks --region us-east-1 update-kubeconfig --name techchallenge-cluster-eks

      # Aplicar a configuração do Kubernetes
      - name: Apply Kubernetes configuration
        run: |
          kubectl delete -f k8s/app.yaml

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Initialize
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./terraform
        env:
          TF_VAR_some_sensitive_var: ${{ secrets.SOME_SENSITIVE_VAR }}